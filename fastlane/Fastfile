fastlane_version '2.93.0'
default_platform :ios

platform :ios do
  desc 'Submit a new Development Build to Apple TestFlight'
  lane :development do
    archiveAndUpload('Example Project (Development)')
  end

  desc 'Submit a new Development Build to Apple TestFlight'
  lane :staging do
    archiveAndUpload('Example Project (Staging)')
  end

  desc 'Submit a new Production Build to Apple TestFlight'
  lane :production do
    archiveAndUpload('Example Project (Production)')
  end

  desc 'Deploy a new version to the App Store'
  lane :release do
    upload_to_app_store(
      submit_for_review: true,
      skip_binary_upload: true,
      force: true
    )
  end

  desc 'Download dSYMs from iTC and upload them to Crashlytics'
  lane :refresh_dsyms do
    identifiers = [
      'be.appwise.Example-Project-Development',
      'be.appwise.Example-Project-Staging',
      'be.appwise.Example-Project'
    ]
    identifiers.each do |identifier|
      download_dsyms(
        app_identifier: identifier,
        output_directory: 'fastlane/build'
      )
      upload_symbols_to_crashlytics
      clean_build_artifacts
    end
  end

  def archiveAndUpload(scheme)
    get_provisioning_profile(
      output_path: 'fastlane/build'
    )
    build_ios_app(
      scheme: scheme,
      include_bitcode: true,
      output_directory: 'fastlane/build',
      silent: true
    )
    upload_to_testflight(
      skip_waiting_for_build_processing: true
    )
  end
end
